{"version":3,"sources":["components/Search/Search.module.css","App.module.css","containers/SearchPage/SearchPage.module.css","components/Results/Results.module.css","components/Result/Result.module.css","containers/PlayPage/PlayPage.module.css","components/HistoryItem/HistoryItem.module.css","components/HistoryList/HistoryList.module.css","containers/HistoryPage/HistoryPage.module.css","store/constants.js","store/reducer.js","store/index.js","services/SCService.js","components/Search/Search.js","components/Result/Result.js","components/Results/Results.js","store/actions.js","containers/SearchPage/SearchPage.js","components/Player/Player.js","containers/PlayPage/PlayPage.js","components/HistoryItem/HistoryItem.js","components/HistoryList/HistoryList.js","containers/HistoryPage/HistoryPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SET_SEARCH","SET_HISTORY","SET_TRACKS","SET_CURRENT_TRACK_ID","INITIAL_STATE","search","history","tracks","currentTrackID","reducer","state","action","type","Object","assign","value","includes","length","shift","push","store","createStore","SC","initialize","client_id","query","get","q","props","className","classes","Search","SearchInput","onChange","searchChange","placeholder","SearchBtn","onClick","searchClicked","result","Result","resultClicked","title","results","tracksToDisplay","map","to","key","id","Results","setSearch","SearchPage","page","setTracksToDisplay","index","slice","setState","event","target","nextClicked","prevState","console","log","setHistory","SCService","then","setTracks","setCurrentTrackID","this","Wrapper","style","marginLeft","NextBtn","Component","connect","dispatch","player","url","PlayPage","Player","historyItem","HistoryItem","historyItemClicked","historyList","idx","HistoryList","HistoryPage","App","Nav","path","render","Boolean","window","location","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d77260aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__1K6u4\",\"SearchInput\":\"Search_SearchInput__2t5hz\",\"SearchBtn\":\"Search_SearchBtn__2aocI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__dcs1T\",\"Nav\":\"App_Nav__1qA8o\",\"active\":\"App_active__3WV4J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NextBtn\":\"SearchPage_NextBtn__1hEEj\",\"Wrapper\":\"SearchPage_Wrapper__1f0OG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Results\":\"Results_Results__3yPzo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Result_Result__1q_h8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"PlayPage_Wrapper__Exv7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HistoryItem\":\"HistoryItem_HistoryItem__nXLej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HistoryList\":\"HistoryList_HistoryList__24P2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"HistoryPage_Wrapper__1xdKi\"};","export const SET_SEARCH = 'SET_SEARCH';\r\nexport const SET_HISTORY = 'SET_HISTORY';\r\nexport const SET_TRACKS = 'SET_TRACKS';\r\nexport const SET_CURRENT_TRACK_ID = 'SET_CURRENT_TRACK_ID';\r\n// export const SET_PAGE = 'SET_PAGE';\r\n","import {\r\n  SET_SEARCH,\r\n  SET_HISTORY,\r\n  SET_TRACKS,\r\n  SET_CURRENT_TRACK_ID,\r\n  // SET_PAGE,\r\n} from './constants';\r\n\r\nconst INITIAL_STATE = {\r\n  search: '',\r\n  history: [],\r\n  tracks: [],\r\n  currentTrackID: 3474914,\r\n  // page: 0,\r\n}\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  // console.log('reducer running', action);\r\n  switch (action.type) {\r\n    case SET_SEARCH:\r\n      return Object.assign({}, state, { search: action.value });\r\n\r\n    case SET_HISTORY:\r\n      var history = [...state.history];\r\n      if (!history.includes(action.value)) {\r\n        if (history.length === 5) history.shift();\r\n        history.push(action.value);\r\n      }\r\n      // return Object.assign({}, state, { history: [...state.history, action.value] });\r\n      return Object.assign({}, state, { history: history });\r\n\r\n    case SET_TRACKS:\r\n      return Object.assign({}, state, { tracks: action.value });\r\n\r\n    case SET_CURRENT_TRACK_ID:\r\n      return Object.assign({}, state, { currentTrackID: action.value });\r\n\r\n    // case SET_PAGE:\r\n    //   return Object.assign({}, state, { page: state.page + 1 });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import SC from 'soundcloud';\r\n\r\nSC.initialize({\r\n  client_id: 'ggX0UomnLs0VmW7qZnCzw',\r\n});\r\n\r\nfunction query(search) {\r\n  return SC.get('/tracks', { q: search });\r\n}\r\n\r\n// function play(track_url) {\r\n//   SC.oEmbed(track_url, { auto_play: true }).then(function (oEmbed) {\r\n//     console.log('oEmbed response: ', oEmbed);\r\n//   });\r\n// }\r\n\r\nexport default {\r\n  query,\r\n  // play,\r\n}","import React from 'react';\r\n\r\nimport classes from './Search.module.css';\r\n\r\nconst search = (props) => (\r\n  <div className={classes.Search}>\r\n    <input className={classes.SearchInput} type=\"text\"\r\n      value={props.search}\r\n      onChange={props.searchChange}\r\n      placeholder=\"Search tracks...\" />\r\n    <button className={classes.SearchBtn} onClick={props.searchClicked}>Go</button>\r\n  </div>\r\n);\r\n\r\nexport default search;\r\n","import React from 'react';\r\n\r\nimport classes from './Result.module.css';\r\n\r\nconst result = (props) => {\r\n  return (\r\n    <div className={classes.Result} onClick={props.resultClicked}>\r\n      <div>{props.title}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default result;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './Results.module.css';\r\n\r\nimport Result from '../Result/Result';\r\n\r\nconst results = (props) => {\r\n  let results = props.tracksToDisplay.map(result => {\r\n    return (\r\n      <Link to={'/play'} key={result.id}>\r\n        <Result\r\n          // key={result.id}\r\n          title={result.title}\r\n          resultClicked={() => props.resultClicked(result.id)}\r\n        />\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Results}>\r\n      {results}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default results;\r\n","import {\r\n  SET_SEARCH,\r\n  SET_HISTORY,\r\n  SET_TRACKS,\r\n  SET_CURRENT_TRACK_ID,\r\n  // SET_PAGE,\r\n} from './constants';\r\n\r\nexport function setSearch(value) {\r\n  return {\r\n    type: SET_SEARCH,\r\n    value\r\n  }\r\n}\r\n\r\nexport function setHistory(value) {\r\n  return {\r\n    type: SET_HISTORY,\r\n    value\r\n  }\r\n}\r\n\r\nexport function setTracks(value) {\r\n  return {\r\n    type: SET_TRACKS,\r\n    value\r\n  }\r\n}\r\n\r\nexport function setCurrentTrackID(value) {\r\n  return {\r\n    type: SET_CURRENT_TRACK_ID,\r\n    value\r\n  }\r\n}\r\n\r\n// export function setPage() {\r\n//   return {\r\n//     type: SET_PAGE,\r\n//   }\r\n// }\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SCService from '../../services/SCService';\r\nimport Search from '../../components/Search/Search';\r\nimport Results from '../../components/Results/Results';\r\n\r\nimport classes from './SearchPage.module.css';\r\n\r\nimport {\r\n  setSearch,\r\n  setHistory,\r\n  setTracks,\r\n  setCurrentTrackID,\r\n  // setPage,\r\n} from '../../store/actions';\r\n\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    // search: '',\r\n    // tracks: [],\r\n    page: 0,\r\n    tracksToDisplay: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.search) {\r\n      this.searchClicked();\r\n    } else {\r\n      this.setTracksToDisplay();\r\n    }\r\n  }\r\n\r\n  setTracksToDisplay = () => {\r\n    var index = this.state.page * 6;\r\n    const results = this.props.tracks.slice(index, index + 6);\r\n    this.setState({ tracksToDisplay: results }, () => {\r\n      // console.log(this.state.tracksToDisplay);\r\n    });\r\n  }\r\n\r\n  searchChange = (event) => {\r\n    this.props.setSearch(event.target.value);\r\n  }\r\n\r\n  nextClicked = () => {\r\n    this.setState((prevState) => {\r\n      return { page: prevState.page + 1 }\r\n    }, () => {\r\n      this.setTracksToDisplay();\r\n    });\r\n  }\r\n\r\n  searchClicked = () => {\r\n    console.log('SearchClicked');\r\n    this.props.setHistory(this.props.search);\r\n    SCService.query(this.props.search)\r\n      .then(tracks => {\r\n        this.props.setTracks(tracks);\r\n        this.setTracksToDisplay();\r\n      });\r\n  }\r\n\r\n  resultClicked = (id) => {\r\n    this.props.setCurrentTrackID(id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Wrapper}>\r\n        <h2 style={{ marginLeft: '10px' }}>Search for Tracks</h2>\r\n        <Search\r\n          search={this.props.search}\r\n          searchChange={this.searchChange}\r\n          searchClicked={this.searchClicked}\r\n          nextClicked={this.nextClicked} />\r\n        <Results\r\n          tracksToDisplay={this.state.tracksToDisplay}\r\n          resultClicked={this.resultClicked}\r\n        />\r\n        <button className={classes.NextBtn} onClick={this.nextClicked}>Next</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('mapStateToProps', state);\r\n  return {\r\n    search: state.search,\r\n    history: state.history,\r\n    tracks: state.tracks,\r\n    currentTrackID: state.currentTrackID,\r\n    // page: state.page,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setSearch: (value) => { dispatch(setSearch(value)) },\r\n    setHistory: (value) => { dispatch(setHistory(value)) },\r\n    setTracks: (value) => { dispatch(setTracks(value)) },\r\n    setCurrentTrackID: (id) => { dispatch(setCurrentTrackID(id)) },\r\n    // setPage: () => { dispatch(setPage()) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n","import React from 'react';\r\n\r\nimport ReactSoundcloud from 'react-soundcloud-embed';\r\n\r\nconst player = (props) => {\r\n  // const url = \"https://api.soundcloud.com/tracks/\" + props.id;\r\n  return (\r\n    <div>\r\n      <ReactSoundcloud url={'https://api.soundcloud.com/tracks/' + props.id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default player;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './PlayPage.module.css';\r\nimport Player from '../../components/Player/Player';\r\n\r\nclass PlayPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.Wrapper}>\r\n        <h2 style={{ marginLeft: '10px' }}>Play Track</h2>\r\n        <Player id={this.props.currentTrackID} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentTrackID: state.currentTrackID,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PlayPage);\r\n","import React from 'react';\r\n\r\nimport classes from './HistoryItem.module.css';\r\n\r\nconst historyItem = (props) => {\r\n  return (\r\n    <div className={classes.HistoryItem} onClick={props.historyItemClicked}>\r\n      <div>{props.title}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default historyItem;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport HistoryItem from '../HistoryItem/HistoryItem';\r\n\r\nimport classes from './HistoryList.module.css';\r\n\r\nconst historyList = (props) => {\r\n  let historyList = props.history.map((historyItem, idx) => {\r\n    return (\r\n      <Link to={'/search'} key={idx}>\r\n        <HistoryItem\r\n          // key={idx}\r\n          title={historyItem}\r\n          historyItemClicked={() => props.historyItemClicked(historyItem)} />\r\n      </Link>\r\n    );\r\n  });\r\n  return (\r\n    <div className={classes.HistoryList}>\r\n      {historyList}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default historyList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HistoryList from '../../components/HistoryList/HistoryList';\r\nimport classes from './HistoryPage.module.css';\r\n\r\nimport {\r\n  setSearch,\r\n} from '../../store/actions';\r\n\r\nclass HistoryPage extends Component {\r\n\r\n  historyItemClicked = (search) => {\r\n    console.log('historyItemClicked');\r\n    this.props.setSearch(search);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.Wrapper}>\r\n        <h2 style={{ marginLeft: '10px' }}>Search History</h2>\r\n        <HistoryList\r\n          history={this.props.history}\r\n          historyItemClicked={this.historyItemClicked} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    history: state.history,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setSearch: (value) => { dispatch(setSearch(value)) },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryPage);\r\n","import React from 'react';\r\nimport { Route, Switch, NavLink } from 'react-router-dom';\r\n// import './App.css';\r\nimport classes from './App.module.css';\r\nimport store from './store';\r\nimport SearchPage from './containers/SearchPage/SearchPage';\r\nimport PlayPage from './containers/PlayPage/PlayPage';\r\nimport HistoryPage from './containers/HistoryPage/HistoryPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={classes.App}>\r\n      <nav className={classes.Nav}>\r\n        <NavLink to=\"/search\">Search</NavLink> |&nbsp;\r\n        <NavLink to=\"/play\">Play</NavLink> |&nbsp;\r\n        <NavLink to=\"/history\">History</NavLink>\r\n      </nav>\r\n      <Switch>\r\n        {/* <Route path=\"/search\" component={SearchPage} /> */}\r\n        <Route path='/search' render={(props) => <SearchPage store={store} {...props} />} />\r\n        {/* <Route path=\"/play\" component={PlayPage} /> */}\r\n        <Route path='/play' render={(props) => <PlayPage store={store} {...props} />} />\r\n        {/* <Route path=\"/history\" component={HistoryPage} /> */}\r\n        <Route path='/history' render={(props) => <HistoryPage store={store} {...props} />} />\r\n        <Route render={() => <h1>404 Error - Page Not found</h1>} />\r\n        {/* <Redirect from=\"/\" to=\"/search\" /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nconst app = (\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}